{"version":3,"sources":["components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/FeedbackOptions/Button/Button.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/FeedbackOptions/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","tagInner","defaultProps","Button","name","onLeaveFeedback","type","button","onClick","FeedbackOptions","options","optionsBtn","Object","keys","wraper","map","el","Statistics","good","neutral","bad","total","positivePercentage","statistics","Notification","message","notification","App","state","ev","target","setState","countTotalFeedback","values","reduce","countPositiveFeedbackPercentage","totalFeedback","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,cAAc,6BAA6B,MAAQ,uBAAuB,kBAAkB,mC,oBCA9GD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,WAAa,iC,gBCA/BD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,OAAS,+B,8KCGvEC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAEC,SAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,MAKPF,EAAQM,aAAe,CACrBJ,SAAU,IAOGF,Q,gCCEAO,EAnBA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,gBACtB,OACE,mCACE,wBACEC,KAAK,SACLF,KAAMA,EACNL,UAAWC,IAAEO,OACbC,QAASH,EAJX,SAMGD,OCIMK,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASL,EAAsB,EAAtBA,gBAC5BM,EAAaC,OAAOC,KAAKH,GAE/B,OACE,qBAAKX,UAAWC,IAAEc,OAAlB,SACGH,EAAWI,KAAI,SAAAC,GACd,OAAO,cAAC,EAAD,CAAQZ,KAAMY,EAAaX,gBAAiBA,GAArBW,S,iBCuBvBC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKvB,UAAWC,IAAEuB,WAAlB,UACE,uCACQ,+BAAOL,OAEf,0CACW,+BAAOC,OAElB,sCACO,+BAAOC,OAEd,wCACS,+BAAOC,OAEhB,oDACqB,iCAAOC,EAAP,c,iBChBrBE,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAG1B,UAAWC,IAAE0B,aAAhB,SAA+BD,KAGxCD,EAAatB,aAAe,CAC1BuB,QAAS,IAOID,QCsDAG,E,4MA9DbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPf,gBAAkB,SAAAwB,GAAO,IACfzB,EAASyB,EAAGC,OAAZ1B,KACR,EAAK2B,SAAL,eAAiB3B,EAAO,EAAKwB,MAAMxB,GAAQ,K,EAG7C4B,mBAAqB,WAKnB,OAJcpB,OAAOqB,OAAO,EAAKL,OAELM,QAAO,SAACb,EAAOL,GAAR,OAAeK,EAAQL,IAAI,I,EAKhEmB,gCAAkC,SAAAC,GAChC,OAAyB,IAAlBA,EACH,EACAC,KAAKC,MAAyB,IAAlB,EAAKV,MAAMV,KAAckB,I,4CAG3C,WAAU,IAAD,EACwBG,KAAKX,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAErBf,EAGEkC,KAHFlC,gBACA2B,EAEEO,KAFFP,mBACAG,EACEI,KADFJ,gCAGF,OACE,qCACE,cAAC,EAAD,CAAStC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAAS6B,KAAKX,MACdvB,gBAAiBA,MAIrB,cAAC,EAAD,CAASR,MAAM,aAAf,SAC4B,IAAzBmC,IACC,cAAC,EAAD,CAAcP,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOW,IACPV,mBAAoBa,EAClBH,gB,GArDEQ,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.07609a1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"funny-title\":\"Section_funny-title__1I8aY\",\"title\":\"Section_title__2zYNS\",\"move-background\":\"Section_move-background__2K8TP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"FeedbackOptions_wraper__19PHT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3ydOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2tYwc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__12DzH\",\"glitch\":\"Notification_glitch__19jP6\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={s.tagInner}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.defaultProps = {\r\n  children: '',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ name, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"button\"\r\n        name={name}\r\n        className={s.button}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {name}\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\nimport Button from './Button/Button';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const optionsBtn = Object.keys(options);\r\n\r\n  return (\r\n    <div className={s.wraper}>\r\n      {optionsBtn.map(el => {\r\n        return <Button name={el} key={el} onLeaveFeedback={onLeaveFeedback} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={s.statistics}>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback: <span>{positivePercentage}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.notification}>{message}</p>;\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: '',\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\r\nimport './App.css';\r\nimport Section from './components/Section/Section';\r\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './components/Statistics/Statistics';\r\nimport Notification from './components/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onLeaveFeedback = ev => {\r\n    const { name } = ev.target;\r\n    this.setState({ [name]: this.state[name] + 1 });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const count = Object.values(this.state);\r\n\r\n    const totalFeedback = count.reduce((total, el) => total + el, 0);\r\n\r\n    return totalFeedback;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = totalFeedback => {\r\n    return totalFeedback === 0\r\n      ? 0\r\n      : Math.round((this.state.good * 100) / totalFeedback);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const {\r\n      onLeaveFeedback,\r\n      countTotalFeedback,\r\n      countPositiveFeedbackPercentage,\r\n    } = this;\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          ></FeedbackOptions>\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {countTotalFeedback() === 0 ? (\r\n            <Notification message=\"No feedback given\" />\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={countTotalFeedback()}\r\n              positivePercentage={countPositiveFeedbackPercentage(\r\n                countTotalFeedback(),\r\n              )}\r\n            ></Statistics>\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}